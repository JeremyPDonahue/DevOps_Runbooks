#!/bin/sh

# Base directory
LOGME_DIR="$HOME/logme"
TODOS_FILE="$LOGME_DIR/todo.md"
DONE_FILE="$LOGME_DIR/done.md"
QUESTIONS_FILE="$LOGME_DIR/questions.md"
ANSWERED_FILE="$LOGME_DIR/answered.md"
LOGS_DIR="$LOGME_DIR/daily"
TODAY="$(date +'%m-%d-%y')"

mkdir -p "$LOGME_DIR" "$LOGS_DIR"
touch "$TODOS_FILE" "$DONE_FILE" "$QUESTIONS_FILE" "$ANSWERED_FILE"

log_file="$LOGS_DIR/daily-activity-$TODAY.log"

write_log() {
  echo "[$(date +'%H:%M:%S')] $1" >> "$log_file"
}

show_help() {
  cat <<EOF
Usage: logme [OPTION] [STRING]

Commands:
  -help                       Show this help message.
  -date <mm/dd/yy>           Show the log for a specific date.
  -todo <STRING>             Add a todo item for today.
  -todo-view                 Show current todo list.
  -todo-done                 Mark a todo item as done.
  -show-done                 Show all completed tasks.
  -q <STRING>                Log a question.
  -qs-view                   View and answer pending questions.
  -qs-answered               View answered questions.
  -daily <STRING>            Log a daily activity entry.

Examples:
  logme -daily "Fixed ingress bug in staging"
  logme -todo "Write K8s node pool playbook"
  logme -q "Why does CoreDNS restart on update?"
EOF
}

to_filename_date() {
  echo "$1" | sed 's#/#-#g'
}

case "$1" in
  -help)
    show_help
    ;;
  -date)
    DATE_FMT="$(to_filename_date "$2")"
    cat "$LOGS_DIR/daily-activity-$DATE_FMT.log" || echo "No log for $2."
    ;;
  -todo)
    echo "- [$TODAY] $2" >> "$TODOS_FILE"
    ;;
  -todo-view)
    cat "$TODOS_FILE"
    ;;
  -todo-done)
    i=1
    while IFS= read -r line; do
      echo "$i. $line"
      eval "todo_$i=\"$line\""
      i=$((i+1))
    done < "$TODOS_FILE"

    [ "$i" -eq 1 ] && echo "No todos to mark as done." && exit 0

    echo -n "> Select item to mark as done: "
    read num
    selected=$(eval "echo \"\${todo_$num}\"")
    if [ -n "$selected" ]; then
      grep -vF "$selected" "$TODOS_FILE" > "$TODOS_FILE.tmp" && mv "$TODOS_FILE.tmp" "$TODOS_FILE"
      echo "$TODAY: $selected" >> "$DONE_FILE"
    fi
    ;;
  -show-done)
    cat "$DONE_FILE"
    ;;
  -q)
    echo "$TODAY: $2" >> "$QUESTIONS_FILE"
    ;;
  -qs-view)
    i=1
    while IFS= read -r line; do
      echo "$i. $line"
      eval "q_$i=\"$line\""
      i=$((i+1))
    done < "$QUESTIONS_FILE"

    [ "$i" -eq 1 ] && echo "No questions to answer." && exit 0

    echo -n "> Select question to answer: "
    read qnum
    if [ -n "$selected" ]; then
      echo "Answer: "
      read ans
      echo "$TODAY: Q: $selected" >> "$ANSWERED_FILE"
      echo "$TODAY: A: $ans" >> "$ANSWERED_FILE"
      grep -vF "$selected" "$QUESTIONS_FILE" > "$QUESTIONS_FILE.tmp" && mv "$QUESTIONS_FILE.tmp" "$QUESTIONS_FILE"
    fi
    ;;
  -qs-answered)
    cat "$ANSWERED_FILE"
    ;;
  -daily)
    write_log "$2"
    ;;
  *)
    echo "Invalid command. Use -help for usage."
    ;;
esac
